@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Quote";

    var custName = "";
    var width = "";
    var depth = "";
    var drawers = "";
    int totalCost = 0;
    var deskId = "";
    var material = "";
    var rushDays = "";
    int rushDaysInt = 0;
    int materialID = 1;
    DateTime quoteDate = DateTime.Now;

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            deskId = Request.QueryString["ID"];
            var db = Database.Open("WebDesks");
            var dbCommand = "SELECT * FROM DeskQuote WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, deskId);

            if (row != null)
            {
                custName = row.CustName;
                width = row.Width;
                depth = row.Depth;
                drawers = row.Drawers;
            }
            else
            {
                Validation.AddFormError("No quote was found for that ID.");
            }
        }
        else
        {
            Validation.AddFormError("No quote was found for that ID.");
        }
    }

    if (IsPost)
    {
        Validation.RequireField("width", "You must enter a width");
        Validation.Add("width", Validator.Range(12, 96, "Width must be between 12 and 96"));
        Validation.RequireField("depth", "You must enter a valid depth");
        Validation.Add("depth", Validator.Range(12, 48, "Depth must be between 12 and 48"));
        Validation.RequireField("drawers", "How many drawers?");
        Validation.Add("drawers", Validator.Range(1, 7, "Choose between 1 and 7 drawers"));
        Validation.RequireField("custName", "What's your name?");
        Validation.RequireField("deskid", "No desk ID was submitted!");


        custName = Request.Form["custName"];
        width = Request.Form["width"];
        depth = Request.Form["depth"];
        drawers = Request.Form["drawers"];

        material = Request.Form["surface"];
        rushDays = Request.Form["rushOption"];

        //Converting the string for material into a Surface Enum.
        Enum.TryParse(material, out MegaDeskWeb.Desk.Surface enumSurface);
        
        //get the material id by comparing the enumSurface value
        //Set the foreign key appropriately
        if (enumSurface.Equals(MegaDeskWeb.Desk.Surface.Pine))
        {
            materialID = 1;
        }
        else if (enumSurface.Equals(MegaDeskWeb.Desk.Surface.Rosewood))
        {
            materialID = 2;
        }
        else if (enumSurface.Equals(MegaDeskWeb.Desk.Surface.Veneer))
        {
            materialID = 3;
        }
        else if (enumSurface.Equals(MegaDeskWeb.Desk.Surface.Laminate))
        {
            materialID = 4;
        }
        else if (enumSurface.Equals(MegaDeskWeb.Desk.Surface.Oak))
        {
            materialID = 5;
        }
        else
        {
            //give 'em pine
            materialID = 1;
        }
        //Cost won't be a field that can be edited.

        deskId = Request.Form["deskId"];

        if (Validation.IsValid())
        {
            //Initialize the updated desk
            MegaDeskWeb.Desk desk = new MegaDeskWeb.Desk
            {
                Width = int.Parse(width),
                Depth = int.Parse(depth),
                NumDrawers = int.Parse(drawers),
                SurfaceMaterial = enumSurface
            };

            //convert rushdays to an int
            rushDaysInt = int.Parse(rushDays);

            //Create an updated deskQuote
            MegaDeskWeb.DeskQuote deskQuote = new MegaDeskWeb.DeskQuote(desk, rushDaysInt, custName, quoteDate);

            //Get total cost from calculating the new deskquote
            totalCost = deskQuote.getQuote();

            var db = Database.Open("WebDesks");
            var updateCommand = "UPDATE DeskQuote SET CustName=@0, Width=@1, Depth=@2, Drawers=@3, MaterialID=@4,TotalCost=@5 WHERE Id=@6";
            db.Execute(updateCommand, custName, width, depth, drawers, materialID, totalCost, deskId);
            Response.Redirect("~/MegaDesk");
        }
    }
}

    <h2>Edit Quote</h2>
    @Html.ValidationSummary()
    <form method="post">
        <fieldset>
            <legend>Quote Information</legend>

            <p>
                <label for="custName">Your Name:</label>
                <input type="text" name="custName" value="@custName" />
            </p>

            <p>
                <label for="width">Width:</label>
                <input type="text" name="width" value="@width" />
            </p>

            <p>
                <label for="depth">Depth:</label>
                <input type="text" name="depth" value="@depth" />
            </p>
            <p>
                <label for="drawers">Drawers:</label>
                <input type="text" name="drawers" value="@drawers" />
            </p>

            <p>
                Surface Material:
                @Html.RadioButton("surface", MegaDeskWeb.Desk.Surface.Pine, true) Pine
                @Html.RadioButton("surface", MegaDeskWeb.Desk.Surface.Oak, false) Oak
                @Html.RadioButton("surface", MegaDeskWeb.Desk.Surface.Laminate, false) Laminate
                @Html.RadioButton("surface", MegaDeskWeb.Desk.Surface.Rosewood, false) Rosewood
                @Html.RadioButton("surface", MegaDeskWeb.Desk.Surface.Veneer, false) Veneer
                @Html.ValidationMessage("surface")
            </p>

            <p>
                Rush Order Options:
                @Html.RadioButton("rushOption", 3, true) 3 Days
                @Html.RadioButton("rushOption", 5, false) 5 Days
                @Html.RadioButton("rushOption", 7, false) 7 Days
                @Html.RadioButton("rushOption", 14, false) 14 Days
                @Html.ValidationMessage("rushOption")
            </p>
            <input type="hidden" name="deskid" value="@deskId" />

            <p><input type="submit" name="buttonSubmit" value="Submit Changes" /></p>
        </fieldset>
    </form>
    <a class="button" href="~/MegaDesk">Return to Main Menu</a>

